<%
# Validate settings
default = Setting.available_settings['plugin_redmine_planning']['default'].clone

# Make sure that all required values exist in the settings
default.each do |key, value|
  @settings[key.to_sym] = value unless @settings.has_key?(key.to_sym)
end

@settings[:tracker]['Default'] = default[:tracker]['Default'] if not @settings[:tracker].has_key?('Default')

# Convert tracker names to tracker IDs
k = @settings[:tracker].keys
k.each do |key|
  next if key == "Default"
  if key.to_i == 0
  then
    val = @settings[:tracker][key]
    tracker = Tracker.where(:name => key).first
    @settings[:tracker].delete(key)
    @settings[:tracker][tracker[:id]] = val if tracker
  end
end

# Remove all old configuration
@settings.each do |key, value|
  sym = key.to_sym
  @settings.delete(sym) unless default.has_key?(sym)
end

%>
<fieldset>
  <legend><strong>Chart settings</strong></legend>
    <p>
        <%= content_tag(:label, "Minimum zoom level") %>
        <%= text_field_tag("settings[min_zoom_level]", @settings[:min_zoom_level]) %>
    </p>
    <p>
        <%= content_tag(:label, "Maximum zoom level") %>
        <%= text_field_tag("settings[max_zoom_level]", @settings[:max_zoom_level]) %>
    </p>
    <p>
        <%= content_tag(:label, "Zoom factor") %>
        <%= text_field_tag("settings[zoom_factor]", @settings[:zoom_factor]) %>
    </p>
    <p>
        <%= content_tag(:label, "Height of issues") %>
        <%= text_field_tag("settings[issue_height]", @settings[:issue_height]) %>
    </p>
    <p>
        <%= content_tag(:label, "Width of one day") %>
        <%= text_field_tag("settings[day_width]", @settings[:day_width]) %>
    </p>
    <p>
        <%= content_tag(:label, "X-margin") %>
        <%= text_field_tag("settings[margin][x]", @settings[:margin][:x]) %>
    </p>
    <p>
        <%= content_tag(:label, "Y-margin") %>
        <%= text_field_tag("settings[margin][y]", @settings[:margin][:y]) %>
    </p>
    <p>
        <%= content_tag(:label, "Length of first relation line segment") %>
        <%= text_field_tag("settings[spacing][x]", @settings[:spacing][:x]) %>
    </p>
    <p>
        <%= content_tag(:label, "Vertical space between issues") %>
        <%= text_field_tag("settings[spacing][y]", @settings[:spacing][:y]) %>
    </p>
    <p>
        <%= content_tag(:label, "Size of issue resize border") %>
        <%= text_field_tag("settings[issue_resize_border]", @settings[:issue_resize_border]) %>
    </p>
</fieldset>
<fieldset>
  <legend><strong>Tracker attributes</strong></legend>
  <dl>
<% d_settings = @settings[:tracker]['Default'] %>
<% Tracker.find_each do |tracker| %>
  <% t_settings = @settings[:tracker][tracker[:id]] %>
  <dt><strong><%= tracker[:name] %></strong></dt>
  <dd>
    <p>
        <% val = t_settings.nil? ? d_settings[:fill_color] : t_settings[:fill_color] %>
        <%= content_tag(:label, "Fill color") %>
        <%= text_field_tag("settings[tracker][" + tracker[:name] + "][fill_color]", val) %>
    </p>
    <p>
        <% val = t_settings.nil? ? d_settings[:text_color] : t_settings[:text_color] %>
        <%= content_tag(:label, "Text color") %>
        <%= text_field_tag("settings[tracker][" + tracker[:name] + "][text_color]", val) %>
    </p>
  </dd>
<% end %>
  </dl>
</fieldset>
<fieldset>
  <legend><strong>Issue type attributes</strong></legend>
  <dl>
<% [:root, :branch, :leaf].each do |type| %>
  <dt><strong><%= type.to_s.titleize %></strong></dt>
  <dd>
    <p>
        <%= content_tag(:label, "Border width") %>
        <%= text_field_tag("settings[type][" + type.to_s + "][width]", @settings[:type][type][:width]) %>
    </p>
    <p>
        <%= content_tag(:label, "Border color") %>
        <%= text_field_tag("settings[type][" + type.to_s + "][stroke]", @settings[:type][type][:stroke]) %>
    </p>
    <p>
        <%= content_tag(:label, "Border radius") %>
        <%= text_field_tag("settings[type][" + type.to_s + "][radius]", @settings[:type][type][:radius]) %>
    </p>
  </dd>
<% end %>
  </dl>
</fieldset>
<%
styles = [
    "<->",
    "-",
    "->",
    "<-",
    "-*",
    "*-",
    "*-*",

    "<.>",
    ".",
    ".>",
    "<.",
    ".*",
    "*.",
    "*.*",

    "<-.>",
    "-.",
    "-.>",
    "<-.",
    "-.*",
    "*-.",
    "*-.*",

    "<-..>",
    "-..",
    "-..>",
    "<-..",
    "-..*",
    "*-..",
    "*-..*",

    "<. >",
    ". ",
    ". >",
    "<. ",
    ". *",
    "*. ",
    "*. *",

    "<- >",
    "- ",
    "- >",
    "<- ",
    "- *",
    "*- ",
    "*- *",

    "<-->",
    "--",
    "-->",
    "<--",
    "--*",
    "*--",
    "*--*",

    "<- .>",
    "- .",
    "- .>",
    "<- .",
    "- .*",
    "*- .",
    "*- *>",

    "<--.>",
    "--.",
    "--.>",
    "<--.",
    "--.*",
    "*--.",
    "*--.*",

    "<--..>",
    "--..",
    "--..>",
    "<--..",
    "--..*",
    "*--..",
    "*--..*"
]

%>
<fieldset>
  <legend><strong>Relation type attributes</strong></legend>
  <dl>
<% [:blocks, :precedes, :copied_to, :duplicates, :relates, :parent].each do |type| %>
  <dt><strong><%= type.to_s.titleize %></strong></dt>
  <dd>
    <p>
        <%= content_tag(:label, "Stroke color") %>
        <%= text_field_tag("settings[relation][" + type.to_s + "][stroke]", @settings[:relation][type][:stroke]) %>
    </p>
    <p>
        <%= content_tag(:label, "Style") %>
        <%= select_tag("settings[relation][" + type.to_s + "][style]",
                  options_for_select(styles, settings[:relation][type][:style])) %>
    </p>
  </dd>
<% end %>
  </dl>
</fieldset>
